{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/프론트엔드","result":{"pageContext":{"currentCategory":"프론트엔드","categories":["All","프론트엔드","타입스크립트","자바스크립트","기타"],"edges":[{"node":{"id":"aee8a021-2207-5c4f-a1a5-2558c287a883","excerpt":"최근 다독다독 프로젝트를 진행하면서 Axios 에러 처리와 관련된 고민을 많이 했었다. 타입스크립트에 익숙치 않았을 뿐더러 커스텀 에러 코드를 사용하면서 구글링도 쉽지 않았는데..🥹 고민의 과정을 적어보려고 한다. Custom Error Code API 요청이 실패한 경우, 다독다독 서버는 Error Response body에 아래와 같이 사전에 정의된 에러 코드를 함께 보내주고 있다. 클라이언트 측에서는 에러 코드에 따라 필요한 핸들링을 하면 된다.  커스텀 에러 코드들은 아래와 같이 string 리터럴 타입으로 미리 선언해 두었다. 서버에서 에러에 대한 설명이 담긴 메세지도 보내주지만, 어떤 처리 없이 바로 사용하기에는 무리가 있어 보였다. 그래서 클라이언트 측에서 사용할 에러 메세지도 별도로 관리하면 좋을 것 같았다. 필요한 것들은 어느정도 정의한 것 같으니.. 이제 응답에서 에러 코드만 잘 뽑아서 사용하면 될 것 같은데..!?!  역시 타입스크립트는 마음처럼 쉽게 되지 않았…","fields":{"slug":"/axios-error-type-guard/"},"frontmatter":{"categories":"프론트엔드 타입스크립트","title":"타입스크립트에서 Axios Error 처리하기","date":"April 05, 2023","description":"근데 이제 타입 가드를 곁들인~"}},"next":{"fields":{"slug":"/store-jwt-token/"}},"previous":null},{"node":{"id":"d4ee223b-057d-5b2b-912d-7188f2585d68","excerpt":"개발 프로젝트를 진행하면서 로그인/회원가입 기능을 구현하고 있다. 백엔드 팀원들과 협의하여 access token과 refresh token으로 사용자 인증을 진행하기로 했다. JWT access token & refresh token 인증 방식이 궁금하다면, 해당 블로그를 참고하면 좋을 것 같다! 이제 토큰을 안전하게 저장해야 하는데… JWT 토큰은 대체 어디에 저장해야 하는 건가..!!  JWT 토큰을 안전하게 저장해야 하는 이유  은 인증에 필요한 정보들을 암호화시킨 JSON 형식의 토큰을 의미한다. 즉, 암호화되어 있다 해도 JWT 토큰에는 사용자의 중요한 정보가 담겨있고 토큰을 통해 사용자 인증을 진행하기 때문에 보안에 신경써야 한다는 의미이다! JWT 토큰을 저장하는 과정에서 다음과 같은 보안 공격에 노출될 수 있음을 인지하고 방어해야 한다. XSS Cross-Site Scripting : CSS(Cascading Style Sheets) 약자는 이미 널리 사용되고 있기…","fields":{"slug":"/store-jwt-token/"},"frontmatter":{"categories":"프론트엔드","title":"JWT 토큰 저장하기","date":"August 22, 2022","description":null}},"next":{"fields":{"slug":"/js-array-from/"}},"previous":{"fields":{"slug":"/axios-error-type-guard/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}