{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/JS","result":{"pageContext":{"currentCategory":"JS","categories":["All","JS","React","Github"],"edges":[{"node":{"id":"4c71118e-cf51-55f2-95c2-969ece85cc1b","excerpt":"우아한 테크코스 3주차 프리코스 미션을 구현하는데 등장한 낯선 .. 제대로된 코드를 작성하기 전에 미리 localStorage를 공부하면서 필요한 객체를 저장하고 꺼내보는 연습을 하자!\n 👀 들어가기에 앞서.. 우아한 테크코스 3주차 프리코스 미션은 자판기를 구현하는 것이다.\n자판기는 크게 3개의 기능이 있는데, 상품 추가가 가능한 상품 관리 기능 자판기 동전 충전 기능 자판기로 상품을 구매할 수 있는 기능 이다. 자세한 내용은 미션 저장소를 통해 확인할 수 있다. ✅ 저장할 객체 생성 먼저 미션 구현을 위해 어떤 객체를 localStorage에 저장해야 하는지를 생각해봐야 한다. 상품 관리 (Stock) 상품명 (productName) 가격 (price) 수량 (remaining) 자판기 잔돈 관리 (Change) 500원 (coin500) 100원 (coin100) 50원 (coin50) 10원 (coin10) 일단은 이정도 엔티티이면 충분할 것 같다! 자바스크립트 코드로 간단…","fields":{"slug":"/js-localstorage/"},"frontmatter":{"categories":"JS","title":"JavaScript localStorage에 객체 저장하기 (feat. 우테코 프리코스 3주차)","date":"December 12, 2021"}},"next":{"fields":{"slug":"/modern-js-deep-dive-36/"}},"previous":{"fields":{"slug":"/react-tech-01/"}}},{"node":{"id":"c72a3715-9f39-5f4c-8b3d-c5de9e379ed4","excerpt":"디스트럭처링 할당 (destructuring assignment) = 구조 분해 할당 구조화된 배열과 같은 이터러블 또는 객체를 비구조화하여 1개 이상의 변수에 개별적으로 할당하는 것을 의미한다. 36.1 배열 디스트럭처링 할당 ES5에서는 인덱스를 사용하여 반복적으로 배열 디스트럭처링 할당을 한다. ES6의 배열 디스트럭처링 할당 배열의 각 요소를 배열로부터 추출하여 1개 이상의 변수에 할당한다. 할당문 우변 항상 이어야 한다. 그렇지 않으면 에러가 발생한다. 배열의 인덱스를 기준으로 순서대로 할당된다. 변수의 개수와 이터러블의 요소 개수가 반드시 일치할 필요는 없다. 할당문 좌변 배열 리터럴 형태 로 할당받을 변수를 선언한다. 선언과 할당을 분리할 수도 있지만,  키워드를 사용할 수 없으므로 권장하지 않는다. 변수에 기본값을 설정할 수 있다. 기본값보다 할당된 값을 우선한다. Rest 요소  를 사용할 수 있다. 반드시 마지막에 위치 💡 배열 스트럭처링 할당은 이터러블에서 필요…","fields":{"slug":"/modern-js-deep-dive-36/"},"frontmatter":{"categories":"JS","title":"[모던 자바스크립트 Deev Dive] 36장","date":"December 05, 2021"}},"next":{"fields":{"slug":"/modern-js-deep-dive-04/"}},"previous":{"fields":{"slug":"/js-localstorage/"}}},{"node":{"id":"462a25cb-f42c-526e-851f-93e94e9795fe","excerpt":"4.1 변수란 무엇일까? 애플리케이션은 모두 데이터를 입력받아 처리하고 결과를 출력한다.\n변수는 프로그래밍 언어에서 데이터를 관리하기 위한 핵심 개념이다.\n변수란 무엇인지 그리고 왜 필요한지 살펴보자! memory 메모리는 데이터를 저장할 수 있는 메모리 셀의 집합체이다. 각 셀은 고유의 메모리 주소(memory address)를 가진다.  은 연산을 통해 새로운 값 30을 생성하고, 그 값은 메모리 공간에 저장된다. 만약 결과값 30을 재사용하고자 한다면 어떻게 해야할까? 메모리 주소를 통해 연산 결과 30이 저장된 메모리 공간에 직접 접근해야 한다. 그러나 자바스크립트는 개발자의 직접적인 메모리 제어를 허용하지 않는다. 코드가 실행되기 이전에는 값이 저장된 메모리 주소도 알 수 없다. 따라서 메모리 주소를 통해 값에 직접 접근하려는 시도는 올바른 방법이 아니다. 변수 프로그래밍 언어는 기억하고 싶은 값을 메모리에 저장하고, 저장된 값을 읽어 들여 재사용하기 위해  라는 메커니즘…","fields":{"slug":"/modern-js-deep-dive-04/"},"frontmatter":{"categories":"JS","title":"[모던 자바스크립트 Deev Dive] 04장","date":"November 29, 2021"}},"next":{"fields":{"slug":"/github-profile/"}},"previous":{"fields":{"slug":"/modern-js-deep-dive-36/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}