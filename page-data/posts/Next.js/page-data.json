{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Next.js","result":{"pageContext":{"currentCategory":"Next.js","categories":["All","프론트엔드","Next.js","타입스크립트","자바스크립트","기타"],"edges":[{"node":{"id":"dae39859-9ee0-5796-9909-3bf900e87164","excerpt":"이것저것 다양한 기술들을 사용해볼 겸 인터렉티브한 웹 포트폴리오를 만들고 있다! 어느정도 구현된 포트폴리오를 로 만들어봤는데, 그 과정을 기록해보려고 한다. PWA (Progressive Web Apps) 구글 PWA 학습 가이드를 차근차근 읽어보면서 PWA가 어떤 기술인지, 왜 적용하면 좋은지를 이해할 수 있었다. 웹의 접근성과 네이티브 앱의 안정성, 성능을 동시에 가져갈 수 있기 때문에 사용자에게 훨씬 좋은 웹앱 경험을 제공할 수 있다. PWA의 이점을 극대화하려면 서비스워커와 다양한 캐싱 전략 등을 적용해보는 것이 좋을 것 같다. 사실 지극히 개인적인 포트폴리오 사이트를 PWA로 만드는 것이 과하다는 생각이 들긴 하지만, 시도해보기 딱 적당한 사이즈의 프로젝트라 도전해봤다. 🤓 2023.11.02 - UPDATE 서비스 워커가 등록되지 않아  레포 이슈를 확인해봤더니 pages를 기준으로 동작하는 라이브러리이기에 app router와 호환성 문제가 있는 것 같았고, 라이브러리…","fields":{"slug":"/nextjs-pwa/"},"frontmatter":{"categories":"프론트엔드 Next.js","title":"Next.js 프로젝트에 PWA 기술 적용하기","date":"October 30, 2023","description":"app router를 사용했어요"}},"next":{"fields":{"slug":"/axios-error-type-guard/"}},"previous":null}]}},"staticQueryHashes":["1073350324","2938748437"]}